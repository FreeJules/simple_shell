.TH "SCARJO SHELL" 1 "2017 APR 14" LOCAL "HOLBERTON SCHOOL BATCH 2"

.SH NAME
ScarJo Shell \- a simple UNIX command interpreter (shell) built as an end of term project for Holberton School
.SH SYNOPSIS
.B scarjo
[command_string | file]
.SH DESCRIPTION
.B ScarJo Shell
is an \fBsh\fR-compatible command language interpreter that executes limited commands read from the standard input.
.PP
.B ScarJo Shell
is \fBnot\fR intended to be a \fBfully\fR conformant implementation of the Shell and Utilities portion of the IEEE POSIX specification (IEEE Standard 1003.1).
.SH DEFINITIONS
.PP
The following definitions are used throughout the rest of this
document.
.PD 0
.TP
.B blank 
A space or tab.
.TP
.B word
A sequence of characters considered as a single unit by the shell.
Also known as a
.BR token .
.TP
.B name
A 
.I word
consisting only of alphanumeric characters and underscores, and
beginning with an alphabetic character or an underscore.  Also
referred to as an
.BR identifier .
.TP
.B metacharacters and control operators
ScarJo Shell only recognizes the following:
A character that, when unquoted, separates words.  One of the following:
.br
.RS
.PP
.if t \fBspace  tab\fP
.if n \fBspace tab\fP
.RE
.PP
.TP
.B control operator
A \fItoken\fP that performs a control function.  It is one of the following
symbols:
.RS
.PP
.if t \fB<newline>\fP
.if n \fB<newline>\fP
.RE
.PD
.SH "'SIMPLE COMMANDS ONLY,' SAYS SCARJO SHELL"
.PP
A \fIsimple command\fP is a sequence of optional variable assignments
followed by \fBblank\fP-separated words and redirections, and
terminated by a \fIcontrol operator\fP.  The first word
specifies the command to be executed, and is passed as argument zero.
The remaining words are passed as arguments to the invoked command.
.PP
.SH "COMMAND EXECUTION"
After a command has been split into words, if it results in a
simple command and an optional list of arguments, the shell attempts to
locate it. ScarJo Shell searches for it in the list of shell builtins.  If a match is found, that
builtin is invoked.
.PP
If the name is a builtin, 
.B ScarJo shell
searches each element of the
.SM
.B PATH
for a directory containing an executable file by that name.
.SH ENVIRONMENT
When a program is invoked it is given an array of strings
called the
.IR environment .
This is a list of 
\fIname\fP\-\fIvalue\fP pairs, of the form
.IR "name\fR=\fPvalue" .
.PP
The shell provides several ways to manipulate the environment.
On invocation, the shell scans its own environment and
creates a parameter for each name found, automatically marking
it for
.I export
to child processes.  Executed commands inherit the environment.

./" .B export
./" and
./" .B declare \-x
./" commands allow parameters and functions to be added to and
./" deleted from the environment.  If the value of a parameter
./" in the environment is modified, the new value becomes part
./" of the environment, replacing the old.  The environment
./" inherited by any executed command consists of the shell's
./" initial environment, whose values may be modified in the shell,
./" less any pairs removed by the
./" .B unset
./" command, plus any additions via the
./" .B export
./" and
./" .B declare \-x
./" commands.
./" .PP
./" The environment for any
./" .I simple command
./" or function may be augmented temporarily by prefixing it with
./" parameter assignments, as described above in
./" .SM
./" .BR PARAMETERS .
./" These assignment statements affect only the environment seen
./" by that command.
./" .PP
./" If the 
./" .B \-k
./" option is set (see the
./" .B set
./" builtin command below), then
./" .I all
./" parameter assignments are placed in the environment for a command,
./" not just those that precede the command name.
./" .PP
./" When
./" .B ScarJo shell
./" invokes an external command, the variable
./" .B _
./" is set to the full filename of the command and passed to that
./" command in its environment.
.SH "EXIT STATUS"
.PP
The exit status of an executed command is the value returned by the
\fIwaitpid\fP system call or equivalent function.  Exit statuses
fall between 0 and 255, though, as explained below, the shell may
use values above 125 specially.  Exit statuses from shell builtins and
compound commands are also limited to this range. Under certain
circumstances, the shell will use special values to indicate specific
failure modes.
.PP
For the shell's purposes, a command which exits with a 
zero exit status has succeeded.  An exit status of zero
indicates success.  A non-zero exit status indicates failure.
./" When a command terminates on a fatal signal \fIN\fP, \fBScarJo shell\fP uses
./" the value of 128+\fIN\fP as the exit status.
./" .PP
./" If a command is not found, the child process created to
./" execute it returns a status of 127.  If a command is found
./" but is not executable, the return status is 126.
./" .PP
./" If a command fails because of an error during expansion or redirection,
./" the exit status is greater than zero.
./" .PP
./" Shell builtin commands return a status of 0 (\fItrue\fP) if
./" successful, and non-zero (\fIfalse\fP) if an error occurs
./" while they execute. 
./" All builtins return an exit status of 2 to indicate incorrect usage.
./" .PP
\fBScarJo Shell\fP itself returns the exit status of the last command
executed, unless a syntax error occurs, in which case it exits
with a non-zero value.  See also the \fBexit\fP builtin
command below.
./" 
.SH SIGNALS
\fBScarJo shell\fP exits when you type C-d.
./" When \fBScarJo shell\fP is interactive, in the absence of any traps, it ignores
./" .SM
./" .B SIGTERM
./" (so that \fBkill 0\fP does not kill an interactive shell),
./" and
./" .SM
./" .B SIGINT
./" is caught and handled (so that the \fBwait\fP builtin is interruptible).
./" In all cases, \fBScarJo shell\fP ignores
./" .SM
./" .BR SIGQUIT .
./" If job control is in effect,
./" .B ScarJo shell
./" ignores
./" .SM
./" .BR SIGTTIN ,
./" .SM
./" .BR SIGTTOU ,
./" and
./" .SM
./" .BR SIGTSTP .
./" .PP
./" Non-builtin commands run by \fBScarJo shell\fP have signal handlers
./" set to the values inherited by the shell from its parent.
./" When job control is not in effect, asynchronous commands
./" ignore
./" .SM
./" .B SIGINT
./" and
./" .SM
./" .B SIGQUIT
./" in addition to these inherited handlers.
./" Commands run as a result of command substitution ignore the
./" keyboard-generated job control signals
./" .SM
./" .BR SIGTTIN ,
./" .SM
./" .BR SIGTTOU ,
./" and
./" .SM
./" .BR SIGTSTP .
./" .PP
./" The shell exits by default upon receipt of a
./" .SM
./" .BR SIGHUP .
./" Before exiting, an interactive shell resends the
./" .SM
./" .B SIGHUP
./" to all jobs, running or stopped.
./" Stopped jobs are sent
./" .SM
./" .B SIGCONT
./" to ensure that they receive the
./" .SM
./" .BR SIGHUP .
./" To prevent the shell from
./" sending the signal to a particular job, it should be removed from the
./" jobs table with the 
./" .B disown
./" builtin (see
./" .SM
./" .B "SHELL BUILTIN COMMANDS"
./" below) or marked 
./" to not receive
./" .SM
./" .B SIGHUP
./" using
./" .BR "disown \-h" .
./" .PP
./" If the
./" .B huponexit
./" shell option has been set with
./" .BR shopt ,
./" .B ScarJo shell
./" sends a 
./" .SM
./" .B SIGHUP
./" to all jobs when an interactive login shell exits.
./" .PP
./" If \fBScarJo shell\fP is waiting for a command to complete and receives a signal
./" for which a trap has been set, the trap will not be executed until
./" the command completes. 
./" When \fBScarJo shell\fP is waiting for an asynchronous command via the \fBwait\fP
./" builtin, the reception of a signal for which a trap has been set will
./" cause the \fBwait\fP builtin to return immediately with an exit status
./" greater than 128, immediately after which the trap is executed.
./" .SH "JOB CONTROL"
./" .I Job control
./" refers to the ability to selectively stop (\fIsuspend\fP)
./" the execution of processes and continue (\fIresume\fP)
./" their execution at a later point.  A user typically employs
./" this facility via an interactive interface supplied jointly
./" by the operating system kernel's terminal driver and
./" .BR ScarJo shell .
./" .PP
./" The shell associates a
./" .I job
./" with each pipeline.  It keeps a table of currently executing
./" jobs, which may be listed with the
./" .B jobs
./" command.  When
./" .B ScarJo shell
./" starts a job asynchronously (in the
./" .IR background ),
./" it prints a line that looks like:
./" .RS
./" .PP
./" [1] 25647
./" .RE
./" .PP
./" indicating that this job is job number 1 and that the process ID
./" of the last process in the pipeline associated with this job is 25647.
./" All of the processes in a single pipeline are members of the same job.
./" .B ScarJo Shell
./" uses the
./" .I job
./" abstraction as the basis for job control.
./" .PP
./" To facilitate the implementation of the user interface to job
./" control, the operating system maintains the notion of a \fIcurrent terminal
./" process group ID\fP.  Members of this process group (processes whose
./" process group ID is equal to the current terminal process group ID)
./" receive keyboard-generated signals such as
./" .SM
./" .BR SIGINT .
./" These processes are said to be in the
./" .IR foreground .
./" .I Background
./" processes are those whose process group ID differs from the terminal's;
./" such processes are immune to keyboard-generated signals.
./" Only foreground processes are allowed to read from or, if the
./" user so specifies with \f(CWstty tostop\fP, write to the
./" terminal.
./" Background processes which attempt to read from (write to when
./" \f(CWstty tostop\fP is in effect) the
./" terminal are sent a 
./" .SM
./" .B SIGTTIN (SIGTTOU)
./" signal by the kernel's terminal driver, 
./" which, unless caught, suspends the process.
./" .PP
./" If the operating system on which
./" .B ScarJo shell
./" is running supports
./" job control,
./" .B ScarJo shell
./" contains facilities to use it.
./" Typing the
./" .I suspend
./" character (typically
./" .BR ^Z ,
./" Control-Z) while a process is running
./" causes that process to be stopped and returns control to 
./" .BR ScarJo shell .
./" Typing the
./" .I "delayed suspend"
./" character (typically
./" .BR ^Y ,
./" Control-Y) causes the process to be stopped when it
./" attempts to read input from the terminal, and control to
./" be returned to
./" .BR ScarJo shell .
./" The user may then manipulate the state of this job, using the
./" .B bg
./" command to continue it in the background, the
./" .B fg
./" command to continue it in the foreground, or
./" the
./" .B kill
./" command to kill it.  A \fB^Z\fP takes effect immediately,
./" and has the additional side effect of causing pending output
./" and typeahead to be discarded.
./" .PP
./" There are a number of ways to refer to a job in the shell.
./" The character
./" .B %
./" introduces a job specification (\fIjobspec\fP).  Job number
./" .I n
./" may be referred to as
./" .BR %n .
./" A job may also be referred to using a prefix of the name used to
./" start it, or using a substring that appears in its command line.
./" For example,
./" .B %ce
./" refers to a stopped
./" .B ce
./" job.  If a prefix matches more than one job,
./" .B ScarJo shell
./" reports an error.  Using
./" .BR %?ce ,
./" on the other hand, refers to any job containing the string
./" .B ce
./" in its command line.  If the substring matches more than one job,
./" .B ScarJo shell
./" reports an error.  The symbols
./" .B %%
./" and
./" .B %+
./" refer to the shell's notion of the
./" .IR "current job" ,
./" which is the last job stopped while it was in
./" the foreground or started in the background.
./" The 
./" .I "previous job"
./" may be referenced using
./" .BR %\- .
./" If there is only a single job, \fB%+\fP and \fB%\-\fP can both be used
./" to refer to that job.
./" In output pertaining to jobs (e.g., the output of the
./" .B jobs
./" command), the current job is always flagged with a
./" .BR + ,
./" and the previous job with a
./" .BR \- .
./" A single % (with no accompanying job specification) also refers to the
./" current job.
./" .PP
./" Simply naming a job can be used to bring it into the
./" foreground:
./" .B %1
./" is a synonym for
./" \fB``fg %1''\fP,
./" bringing job 1 from the background into the foreground.
./" Similarly,
./" .B ``%1 &''
./" resumes job 1 in the background, equivalent to
./" \fB``bg %1''\fP.
./" .PP
./" The shell learns immediately whenever a job changes state.
./" Normally,
./" .B ScarJo shell
./" waits until it is about to print a prompt before reporting
./" changes in a job's status so as to not interrupt
./" any other output.  If the 
./" .B \-b
./" option to the
./" .B set
./" builtin command
./" is enabled,
./" .B ScarJo shell
./" reports such changes immediately.
./" Any trap on
./" .SM
./" .B SIGCHLD
./" is executed for each child that exits.
./" .PP
./" If an attempt to exit
./" .B ScarJo shell
./" is made while jobs are stopped (or, if the \fBcheckjobs\fP shell option has
./" been enabled using the \fBshopt\fP builtin, running), the shell prints a
./" warning message, and, if the \fBcheckjobs\fP option is enabled, lists the
./" jobs and their statuses.
./" The
./" .B jobs
./" command may then be used to inspect their status. 
./" If a second attempt to exit is made without an intervening command,
./" the shell does not print another warning, and any stopped
./" jobs are terminated.
.SH "SHELL BUILTIN COMMANDS"
.\" start of ScarJo shell_builtins
.zZ
.PP
./" Unless otherwise noted, each builtin command documented in this
./" section as accepting options preceded by
./" .B \-
./" accepts
./" .B \-\-
./" to signify the end of the options.
./" The \fB:\fP, \fBtrue\fP, \fBfalse\fP, and \fBtest\fP builtins
./" do not accept options and do not treat \fB\-\-\fP specially.
./" The \fBexit\fP, \fBlogout\fP, \fBbreak\fP, \fBcontinue\fP, \fBlet\fP,
./" and \fBshift\fP builtins accept and process arguments beginning with
./" \fB\-\fP without requiring \fB\-\-\fP.
./" Other builtins that accept arguments but are not specified as accepting
./" options interpret arguments beginning with \fB\-\fP as invalid options and
./" require \fB\-\-\fP to prevent this interpretation.
.sp .5
.PD 0
.TP
\fBexit\fP [\fIn\fP]
Cause the shell to exit
with a status of \fIn\fP.  If
.I n
is omitted, the exit status
is that of the last command executed.
A trap on
.SM
.B EXIT
is executed before the shell terminates.
./" .TP
./" \fBfg\fP [\fIjobspec\fP]
./" Resume
./" .I jobspec
./" in the foreground, and make it the current job.
./" If
./" .I jobspec
./" is not present, the shell's notion of the \fIcurrent job\fP is used.
./" The return value is that of the command placed into the foreground,
./" or failure if run when job control is disabled or, when run with
./" job control enabled, if
./" .I jobspec
./" does not specify a valid job or
./" .I jobspec
./" specifies a job that was started without job control.
./"
./".TP
./" \fBsetenv\fP [\fB\-\-abefhkmnptuvxBCEHPT\fP] [\fB\-o\fP \fIoption\-name\fP] [\fIarg\fP ...]
./" .PD 0
./" .TP
./" \fBset\fP [\fB+abefhkmnptuvxBCEHPT\fP] [\fB+o\fP \fIoption\-name\fP] [\fIarg\fP ...]
.TP
\fBenv\fP
Prints a list of the environment variables.
.TP
\fBsetenv\fP [\fIname\fP \fIvalue\fP]
Adds a new environment variable or changes an existing variable.
.TP
\fBunsetenv\fP [\fIname\fP \fIvalue\fP]
Unsets an environment variable.
./" .PD 0
./" .PD 0
./" .TP
./" .PD
./" Without options, the name and value of each shell variable are displayed
./" in a format that can be reused as input
./" for setting or resetting the currently-set variables.
./" Read-only variables cannot be reset.
./" In \fIposix\fP mode, only shell variables are listed.
./" The output is sorted according to the current locale.
./" When options are specified, they set or unset shell attributes.
./" Any arguments remaining after option processing are treated
./" as values for the positional parameters and are assigned, in order, to 
./" .BR $1 ,
./" .BR $2 ,
./" .B ...
./" .BR $\fIn\fP .
./" Options, if specified, have the following meanings:
./" .RS
./" .PD 0
./" .TP 8
./" .B \-a
./" Automatically mark variables and functions which are modified or
./" created for export to the environment of subsequent commands.
./" .TP 8
./" .B \-b
./" Report the status of terminated background jobs
./" immediately, rather than before the next primary prompt.  This is
./" effective only when job control is enabled.
./" .TP 8
./" .B \-e
./" Exit immediately if a
./" \fIpipeline\fP (which may consist of a single \fIsimple command\fP),
./" a \fIlist\fP,
./" or a \fIcompound command\fP
./" (see
./" .SM
./" .B SHELL GRAMMAR
./" above),  exits with a non-zero status.
./" The shell does not exit if the
./" command that fails is part of the command list immediately following a
./" .B while
./" or
./" .B until
./" keyword, 
./" part of the test following the
./" .B if
./" or
./" .B elif
./" reserved words, part of any command executed in a
./" .B &&
./" or
./" .B ||
./" list except the command following the final \fB&&\fP or \fB||\fP,
./" any command in a pipeline but the last,
./" or if the command's return value is
./" being inverted with
./" .BR ! .
./" If a compound command other than a subshell
./" returns a non-zero status because a command failed
./" while \fB\-e\fP was being ignored, the shell does not exit.
./" A trap on \fBERR\fP, if set, is executed before the shell exits.
./" This option applies to the shell environment and each subshell environment
./" separately (see
./" .SM
./" .B "COMMAND EXECUTION ENVIRONMENT"
./" above), and may cause
./" subshells to exit before executing all the commands in the subshell.
./" .if t .sp 0.5
./" .if n .sp 1
./" If a compound command or shell function executes in a context
./" where \fB\-e\fP is being ignored,
./" none of the commands executed within the compound command or function body
./" will be affected by the \fB\-e\fP setting, even if \fB\-e\fP is set
./" and a command returns a failure status.
./" If a compound command or shell function sets \fB\-e\fP while executing in
./" a context where \fB\-e\fP is ignored, that setting will not have any
./" effect until the compound command or the command containing the function
./" call completes.
./" .TP 8
./" .B \-f
./" Disable pathname expansion.
./" .TP 8 
./" .B \-h
./" Remember the location of commands as they are looked up for execution.
./" This is enabled by default.
./" .TP 8
./" .B \-k
./" All arguments in the form of assignment statements
./" are placed in the environment for a command, not just
./" those that precede the command name.
./" .TP 8
./" .B \-m
./" Monitor mode.  Job control is enabled.  This option is on
./" by default for interactive shells on systems that support
./" it (see
./" .SM
./" .B JOB CONTROL
./" above).
./" All processes run in a separate process group.
./" When a background job completes, the shell prints a line
./" containing its exit status.
./" .TP 8
./" .B \-n
./" Read commands but do not execute them.  This may be used to 
./" check a shell script for syntax errors.  This is ignored by
./" interactive shells.
./" .TP 8
./" .B \-o \fIoption\-name\fP
./" The \fIoption\-name\fP can be one of the following:
./" .RS
./" .TP 8
./" .B allexport
./" Same as
./" .BR \-a .
./" .TP 8
./" .B braceexpand
./" Same as
./" .BR \-B .
./" .TP 8
./" .B emacs
./" Use an emacs-style command line editing interface.  This is enabled
./" by default when the shell is interactive, unless the shell is started
./" with the
./" .B \-\-noediting
./" option.
./" This also affects the editing interface used for \fBread \-e\fP.
./" .TP 8
./" .B errexit
./" Same as
./" .BR \-e .
./" .TP 8
./" .B errtrace
./" Same as
./" .BR \-E .
./" .TP 8
./" .B functrace
./" Same as
./" .BR \-T .
./" .TP 8
./" .B hashall
./" Same as
./" .BR \-h .
./" .TP 8
./" .B histexpand
./" Same as
./" .BR \-H .
./" .TP 8
./" .B history
./" Enable command history, as described above under
./" .SM
./" .BR HISTORY .
./" This option is on by default in interactive shells.
./" .TP 8
./" .B ignoreeof
./" The effect is as if the shell command
./" .if t \f(CWIGNOREEOF=10\fP
./" .if n ``IGNOREEOF=10''
./" had been executed
./" (see
./" .B Shell Variables
./" above).
./" .TP 8
./" .B keyword
./" Same as
./" .BR \-k .
./" .TP 8
./" .B monitor
./" Same as
./" .BR \-m .
./" .TP 8
./" .B noclobber
./" Same as
./" .BR \-C .
./" .TP 8
./" .B noexec
./" Same as
./" .BR \-n .
./" .TP 8
./" .B noglob
./" Same as
./" .BR \-f .
./" .TP 8
./" .B nolog
./" Currently ignored.
./" .TP 8
./" .B notify
./" Same as
./" .BR \-b .
./" .TP 8
./" .B nounset
./" Same as
./" .BR \-u .
./" .TP 8
./" .B onecmd
./" Same as
./" .BR \-t .
./" .TP 8
./" .B physical
./" Same as
./" .BR \-P .
./" .TP 8
./" .B pipefail
./" If set, the return value of a pipeline is the value of the last
./" (rightmost) command to exit with a non-zero status, or zero if all
./" commands in the pipeline exit successfully.
./" This option is disabled by default.
./" .TP 8
./" .B posix
./" Change the behavior of
./" .B bash
./" where the default operation differs
./" from the POSIX standard to match the standard (\fIposix mode\fP).
./" See
./" .SM
./" .B "SEE ALSO"
./" below for a reference to a document that details how posix mode affects
./" bash's behavior.
./" .TP 8
./" .B privileged
./" Same as
./" .BR \-p .
./" .TP 8
./" .B verbose
./" Same as
./" .BR \-v .
./" .TP 8
./" .B vi
./" Use a vi-style command line editing interface.
./" This also affects the editing interface used for \fBread \-e\fP.
./" .TP 8
./" .B xtrace
./" Same as
./" .BR \-x .
./" .sp .5
./" .PP
./" If
./" .B \-o
./" is supplied with no \fIoption\-name\fP, the values of the current options are
./" printed.
./" If
./" .B +o
./" is supplied with no \fIoption\-name\fP, a series of
./" .B set
./" commands to recreate the current option settings is displayed on
./" the standard output.
./" .RE
./" .TP 8
./" .B \-p
./" Turn on
./" .I privileged
./" mode.  In this mode, the
./" .SM
./" .B $ENV
./" and
./" .SM
./" .B $BASH_ENV
./" files are not processed, shell functions are not inherited from the
./" environment, and the
./" .SM
./" .BR SHELLOPTS ,
./" .SM
./" .BR BASHOPTS ,
./" .SM
./" .BR CDPATH ,
./" and
./" .SM
./" .B GLOBIGNORE
./" variables, if they appear in the environment, are ignored.
./" If the shell is started with the effective user (group) id not equal to the
./" real user (group) id, and the \fB\-p\fP option is not supplied, these actions
./" are taken and the effective user id is set to the real user id.
./" If the \fB\-p\fP option is supplied at startup, the effective user id is
./" not reset.
./" Turning this option off causes the effective user
./" and group ids to be set to the real user and group ids.
./" .TP 8
./" .B \-t
./" Exit after reading and executing one command.
./" .TP 8
./" .B \-u
./" Treat unset variables and parameters other than the special
./" parameters "@" and "*" as an error when performing
./" parameter expansion.  If expansion is attempted on an
./" unset variable or parameter, the shell prints an error message, and,
./" if not interactive, exits with a non-zero status.
./" .TP 8
./" .B \-v
./" Print shell input lines as they are read.
./" .TP 8
./" .B \-x
./" After expanding each \fIsimple command\fP,
./" \fBfor\fP command, \fBcase\fP command, \fBselect\fP command, or
./" arithmetic \fBfor\fP command, display the expanded value of
./" .SM
./" .BR PS4 ,
./" followed by the command and its expanded arguments
./" or associated word list.
./" .TP 8
./" .B \-B
./" The shell performs brace expansion (see
./" .B Brace Expansion
./" above).  This is on by default.
./" .TP 8
./" .B \-C
./" If set,
./" .B bash
./" does not overwrite an existing file with the
./" .BR > ,
./" .BR >& ,
./" and
./" .B <>
./" redirection operators.  This may be overridden when 
./" creating output files by using the redirection operator
./" .B >|
./" instead of
./" .BR > .
./" .TP 8
./" .B \-E
./" If set, any trap on \fBERR\fP is inherited by shell functions, command
./" substitutions, and commands executed in a subshell environment.
./" The \fBERR\fP trap is normally not inherited in such cases.
./" .TP 8
./" .B \-H
./" Enable
./" .B !
./" style history substitution.  This option is on by
./" default when the shell is interactive.
./" .TP 8
./" .B \-P
./" If set, the shell does not resolve symbolic links when executing
./" commands such as
./" .B cd
./" that change the current working directory.  It uses the
./" physical directory structure instead.  By default,
./" .B bash
./" follows the logical chain of directories when performing commands
./" which change the current directory.
./" .TP 8
./" .B \-T
./" If set, any traps on \fBDEBUG\fP and \fBRETURN\fP are inherited by shell
./" functions, command substitutions, and commands executed in a
./" subshell environment.
./" The \fBDEBUG\fP and \fBRETURN\fP traps are normally not inherited
./" in such cases.
./" .TP 8
./" .B \-\-
./" If no arguments follow this option, then the positional parameters are
./" unset.  Otherwise, the positional parameters are set to the
./" \fIarg\fPs, even if some of them begin with a
./" .BR \- .
./" .TP 8
./" .B \-
./" Signal the end of options, cause all remaining \fIarg\fPs to be
./" assigned to the positional parameters.  The
./" .B \-x
./" and
./" .B \-v
./" options are turned off.
./" If there are no \fIarg\fPs,
./" the positional parameters remain unchanged.
./" .PD
./" .PP
./" The options are off by default unless otherwise noted.
./" Using + rather than \- causes these options to be turned off.
./" The options can also be specified as arguments to an invocation of
./" the shell.
./" The current set of options may be found in
./" .BR $\- .
./" The return status is always true unless an invalid option is encountered.
./" .RE
./" .TP
./" ./" \fBshift\fP [\fIn\fP]
./" The positional parameters from \fIn\fP+1 ... are renamed to
./" .B $1
./" .B ....
./" Parameters represented by the numbers \fB$#\fP
./" down to \fB$#\fP\-\fIn\fP+1 are unset.
./" .I n
./" must be a non-negative number less than or equal to \fB$#\fP.
./" If
./" .I n
./" is 0, no parameters are changed.
./" If
./" .I n 
./" is not given, it is assumed to be 1.
./" If
./" .I n
./" is greater than \fB$#\fP, the positional parameters are not changed.
./" The return status is greater than zero if
./" .I n
./" is greater than
./" .B $#
./" or less than zero; otherwise 0.
./" .TP
./" \fBshopt\fP [\fB\-pqsu\fP] [\fB\-o\fP] [\fIoptname\fP ...]
./" Toggle the values of settings controlling optional shell behavior.
./" The settings can be either those listed below, or, if the
./" .B \-o
./" option is used, those available with the
./" .B \-o
./" option to the \fBset\fP builtin command.
./" With no options, or with the
./" .B \-p
./" option, a list of all settable options is displayed, with
./" an indication of whether or not each is set.
./" The \fB\-p\fP option causes output to be displayed in a form that
./" may be reused as input.
./" Other options have the following meanings:
./" .RS
./" .PD 0
./" .TP
./" .B \-s
./" Enable (set) each \fIoptname\fP.
./" .TP
./" .B \-u
./" Disable (unset) each \fIoptname\fP.
./" .TP
./" .B \-q
./" Suppresses normal output (quiet mode); the return status indicates
./" whether the \fIoptname\fP is set or unset.
./" If multiple \fIoptname\fP arguments are given with
./" .BR \-q ,
./" the return status is zero if all \fIoptnames\fP are enabled; non-zero
./" otherwise.
./" .TP
./" .B \-o
./" Restricts the values of \fIoptname\fP to be those defined for the
./" .B \-o
./" option to the
./" .B set
./" builtin.
./" .PD
./" .PP
./" If either
./" .B \-s
./" or
./" .B \-u
./" is used with no \fIoptname\fP arguments,
./" .B shopt
./" shows only those options which are set or unset, respectively.
./" Unless otherwise noted, the \fBshopt\fP options are disabled (unset)
./" by default.
./" .PP
./" The return status when listing options is zero if all \fIoptnames\fP
./" are enabled, non-zero otherwise.  When setting or unsetting options,
./" the return status is zero unless an \fIoptname\fP is not a valid shell
./" option.
./" .PP
./" The list of \fBshopt\fP options is:
./" .if t .sp .5v
./" .if n .sp 1v
./" .PD 0
./" .TP 8
./" .B autocd
./" If set, a command name that is the name of a directory is executed as if
./" it were the argument to the \fBcd\fP command.
./" This option is only used by interactive shells.
./" .TP 8
./" .B cdable_vars
./" If set, an argument to the
./" .B cd
./" builtin command that
./" is not a directory is assumed to be the name of a variable whose
./" value is the directory to change to.
./" .TP 8
./" .B cdspell
./" If set, minor errors in the spelling of a directory component in a
./" .B cd
./" command will be corrected.
./" The errors checked for are transposed characters,
./" a missing character, and one character too many.
./" If a correction is found, the corrected filename is printed,
./" and the command proceeds.
./" This option is only used by interactive shells.
./" .TP 8
./" .B checkhash
./" If set, \fBbash\fP checks that a command found in the hash
./" table exists before trying to execute it.  If a hashed command no
./" longer exists, a normal path search is performed.
./" .TP 8
./" .B checkjobs
./" If set, \fBbash\fP lists the status of any stopped and running jobs before
./" exiting an interactive shell.  If any jobs are running, this causes
./" the exit to be deferred until a second exit is attempted without an
./" intervening command (see
./" .SM
./" .B "JOB CONTROL"
./" above).  The shell always
./" postpones exiting if any jobs are stopped.
./" .TP 8
./" .B checkwinsize
./" If set, \fBbash\fP checks the window size after each command
./" and, if necessary, updates the values of
./" .SM
./" .B LINES
./" and
./" .SM
./" .BR COLUMNS .
./" .TP 8
./" .B cmdhist
./" If set,
./" .B bash
./" attempts to save all lines of a multiple-line
./" command in the same history entry.  This allows
./" easy re-editing of multi-line commands.
./" .TP 8
./" .B compat31
./" If set,
./" .B bash
./" changes its behavior to that of version 3.1 with respect to quoted
./" arguments to the \fB[[\fP conditional command's \fB=~\fP operator
./" and locale-specific string comparison when using the \fB[[\fP
./" conditional command's \fB<\fP and \fB>\fP operators.
./" Bash versions prior to bash-4.1 use ASCII collation and
./" .IR strcmp (3);
./" bash-4.1 and later use the current locale's collation sequence and
./" .IR strcoll (3).
./" .TP 8
./" .B compat32
./" If set,
./" .B bash
./" changes its behavior to that of version 3.2 with respect to
./" locale-specific string comparison when using the \fB[[\fP
./" conditional command's \fB<\fP and \fB>\fP operators (see previous item).
./" .TP 8
./" .B compat40
./" If set,
./" .B bash
./" changes its behavior to that of version 4.0 with respect to locale-specific
./" string comparison when using the \fB[[\fP
./" conditional command's \fB<\fP and \fB>\fP operators (see description of
./" \fBcompat31\fP)
./" and the effect of interrupting a command list.
./" Bash versions 4.0 and later interrupt the list as if the shell received the
./" interrupt; previous versions continue with the next command in the list.
./" .TP 8
./" .B compat41
./" If set,
./" .BR bash ,
./" when in \fIposix\fP mode, treats a single quote in a double-quoted
./" parameter expansion as a special character.  The single quotes must match
./" (an even number) and the characters between the single quotes are considered
./" quoted.  This is the behavior of posix mode through version 4.1.
./" The default bash behavior remains as in previous versions.
./" .TP 8
./" .B compat42
./" If set,
./" .B bash
./" does not process the replacement string in the pattern substitution word
./" expansion using quote removal.
./" .TP 8
./" .B complete_fullquote
./" If set,
./" .B bash
./" quotes all shell metacharacters in filenames and directory names when
./" performing completion.
./" If not set,
./" .B bash
./" removes metacharacters such as the dollar sign from the set of
./" characters that will be quoted in completed filenames
./" when these metacharacters appear in shell variable references in words to be
./" completed.
./" This means that dollar signs in variable names that expand to directories
./" will not be quoted;
./" however, any dollar signs appearing in filenames will not be quoted, either.
./" This is active only when bash is using backslashes to quote completed
./" filenames.
./" This variable is set by default, which is the default bash behavior in
./" versions through 4.2.
./" .TP 8
./" .B direxpand
./" If set,
./" .B bash
./" replaces directory names with the results of word expansion when performing
./" filename completion.  This changes the contents of the readline editing
./" buffer.
./" If not set,
./" .B bash
./" attempts to preserve what the user typed.
./" .TP 8
./" .B dirspell
./" If set,
./" .B bash
./" attempts spelling correction on directory names during word completion
./" if the directory name initially supplied does not exist.
./" .TP 8
./" .B dotglob
./" If set, 
./" .B bash
./" includes filenames beginning with a `.' in the results of pathname
./" expansion.
./" .TP 8
./" .B execfail
./" If set, a non-interactive shell will not exit if
./" it cannot execute the file specified as an argument to the
./" .B exec
./" builtin command.  An interactive shell does not exit if
./" .B exec
./" fails.
./" .TP 8
./" .B expand_aliases
./" If set, aliases are expanded as described above under
./" .SM
./" .BR ALIASES .
./" This option is enabled by default for interactive shells.
./" .TP 8
./" .B extdebug
./" If set, behavior intended for use by debuggers is enabled:
./" .RS
./" .TP
./" .B 1.
./" The \fB\-F\fP option to the \fBdeclare\fP builtin displays the source
./" file name and line number corresponding to each function name supplied
./" as an argument.
./" .TP
./" .B 2.
./" If the command run by the \fBDEBUG\fP trap returns a non-zero value, the
./" next command is skipped and not executed.
./" .TP
./" .B 3.
./" If the command run by the \fBDEBUG\fP trap returns a value of 2, and the
./" shell is executing in a subroutine (a shell function or a shell script
./" executed by the \fB.\fP or \fBsource\fP builtins), a call to
./" \fBreturn\fP is simulated.
./" .TP
./" .B 4.
./" .SM
./" .B BASH_ARGC
./" and
./" .SM
./" .B BASH_ARGV
./" are updated as described in their descriptions above.
./" .TP
./" .B 5.
./" Function tracing is enabled:  command substitution, shell functions, and
./" subshells invoked with \fB(\fP \fIcommand\fP \fB)\fP inherit the
./" \fBDEBUG\fP and \fBRETURN\fP traps.
./" .TP
./" .B 6.
./" Error tracing is enabled:  command substitution, shell functions, and
./" subshells invoked with \fB(\fP \fIcommand\fP \fB)\fP inherit the
./" \fBERR\fP trap.
./" .RE
./" .TP 8
./" .B extglob
./" If set, the extended pattern matching features described above under
./" \fBPathname Expansion\fP are enabled.
./" .TP 8
./" .B extquote
./" If set, \fB$\fP\(aq\fIstring\fP\(aq and \fB$\fP"\fIstring\fP" quoting is
./" performed within \fB${\fP\fIparameter\fP\fB}\fP expansions
./" enclosed in double quotes.  This option is enabled by default.
./" .TP 8
./" .B failglob
./" If set, patterns which fail to match filenames during pathname expansion
./" result in an expansion error.
./" .TP 8
./" .B force_fignore
./" If set, the suffixes specified by the
./" .SM
./" .B FIGNORE
./" shell variable
./" cause words to be ignored when performing word completion even if
./" the ignored words are the only possible completions.
./" See
./" .SM
./" \fBSHELL VARIABLES\fP
./" above for a description of
./" .SM
./" .BR FIGNORE .
./" This option is enabled by default.
./" .TP 8
./" .B globasciiranges
./" If set, range expressions used in pattern matching bracket expressions (see
./" .SM
./" .B Pattern Matching
./" above) behave as if in the traditional C locale when performing
./" comparisons.  That is, the current locale's collating sequence
./" is not taken into account, so
./" .B b
./" will not collate between
./" .B A
./" and
./" .BR B ,
./" and upper-case and lower-case ASCII characters will collate together.
./" .TP 8
./" .B globstar
./" If set, the pattern \fB**\fP used in a pathname expansion context will
./" match all files and zero or more directories and subdirectories.
./" If the pattern is followed by a \fB/\fP, only directories and
./" subdirectories match.
./" .TP 8
./" .B gnu_errfmt
./" If set, shell error messages are written in the standard GNU error
./" message format.
./" .TP 8
./" .B histappend
./" If set, the history list is appended to the file named by the value
./" of the
./" .SM
./" .B HISTFILE
./" variable when the shell exits, rather than overwriting the file.
./" .TP 8
./" .B histreedit
./" If set, and
./" .B readline
./" is being used, a user is given the opportunity to re-edit a
./" failed history substitution.
./" .TP 8
./" .B histverify
./" If set, and 
./" .B readline
./" is being used, the results of history substitution are not immediately
./" passed to the shell parser.  Instead, the resulting line is loaded into
./" the \fBreadline\fP editing buffer, allowing further modification.
./" .TP 8
./" .B hostcomplete
./" If set, and
./" .B readline
./" is being used, \fBbash\fP will attempt to perform hostname completion when a
./" word containing a \fB@\fP is being completed (see
./" .B Completing
./" under
./" .SM
./" .B READLINE
./" above).
./" This is enabled by default.
./" .TP 8
./" .B huponexit
./" If set, \fBbash\fP will send
./" .SM
./" .B SIGHUP
./" to all jobs when an interactive login shell exits.
./" .TP 8
./" .B interactive_comments
./" If set, allow a word beginning with
./" .B #
./" to cause that word and all remaining characters on that
./" line to be ignored in an interactive shell (see
./" .SM
./" .B COMMENTS
./" above).  This option is enabled by default.
./" .TP 8
./" .B lastpipe
./" If set, and job control is not active, the shell runs the last command of
./" a pipeline not executed in the background in the current shell environment.
./" .TP 8
./" .B lithist
./" If set, and the
./" .B cmdhist
./" option is enabled, multi-line commands are saved to the history with
./" embedded newlines rather than using semicolon separators where possible.
./" .TP 8
./" .B login_shell
./" The shell sets this option if it is started as a login shell (see
./" .SM
./" .B "INVOCATION"
./" above).
./" The value may not be changed.
./" .TP 8
./" .B mailwarn
./" If set, and a file that \fBbash\fP is checking for mail has been  
./" accessed since the last time it was checked, the message ``The mail in
./" \fImailfile\fP has been read'' is displayed.
./" .TP 8
./" .B no_empty_cmd_completion
./" If set, and
./" .B readline
./" is being used,
./" .B bash
./" will not attempt to search the
./" .SM
./" .B PATH
./" for possible completions when
./" completion is attempted on an empty line.
./" .TP 8
./" .B nocaseglob
./" If set,
./" .B bash
./" matches filenames in a case\-insensitive fashion when performing pathname
./" expansion (see
./" .B Pathname Expansion
./" above).
./" .TP 8
./" .B nocasematch
./" If set,
./" .B bash
./" matches patterns in a case\-insensitive fashion when performing matching
./" while executing \fBcase\fP or \fB[[\fP conditional commands.
./" .TP 8
./" .B nullglob
./" If set,
./" .B bash
./" allows patterns which match no
./" files (see
./" .B Pathname Expansion
./" above)
./" to expand to a null string, rather than themselves.
./" .TP 8
./" .B progcomp
./" If set, the programmable completion facilities (see
./" \fBProgrammable Completion\fP above) are enabled.
./" This option is enabled by default.
./" .TP 8
./" .B promptvars
./" If set, prompt strings undergo
./" parameter expansion, command substitution, arithmetic
./" expansion, and quote removal after being expanded as described in
./" .SM
./" .B PROMPTING
./" above.  This option is enabled by default.
./" .TP 8
./" .B restricted_shell
./" The shell sets this option if it is started in restricted mode (see
./" .SM
./" .B "RESTRICTED SHELL"
./" below).
./" The value may not be changed.
./" This is not reset when the startup files are executed, allowing
./" the startup files to discover whether or not a shell is restricted.
./" .TP 8
./" .B shift_verbose
./" If set, the
./" .B shift
./" builtin prints an error message when the shift count exceeds the
./" number of positional parameters.
./" .TP 8
./" .B sourcepath
./" If set, the
./" \fBsource\fP (\fB.\fP) builtin uses the value of
./" .SM
./" .B PATH
./" to find the directory containing the file supplied as an argument.
./" This option is enabled by default.
./" .TP 8
./" .B xpg_echo
./" If set, the \fBecho\fP builtin expands backslash-escape sequences
./" by default.
./" .RE
./" .PD
./" .TP
./" \fBsuspend\fP [\fB\-f\fP]
./" Suspend the execution of this shell until it receives a
./" .SM
./" .B SIGCONT
./" signal.  A login shell cannot be suspended; the
./" .B \-f
./" option can be used to override this and force the suspension.
./" The return status is 0 unless the shell is a login shell and
./" .B \-f
./" is not supplied, or if job control is not enabled.
./" .TP
./" \fBtest\fP \fIexpr\fP
./" .PD 0
./" .TP
./" \fB[\fP \fIexpr\fP \fB]\fP
./" Return a status of 0 (true) or 1 (false) depending on
./" the evaluation of the conditional expression
./" .IR expr .
./" Each operator and operand must be a separate argument.
./" Expressions are composed of the primaries described above under
./" .SM
./" .BR "CONDITIONAL EXPRESSIONS" .
./" \fBtest\fP does not accept any options, nor does it accept and ignore
./" an argument of \fB\-\-\fP as signifying the end of options.
./" .if t .sp 0.5
./" .if n .sp 1
./" Expressions may be combined using the following operators, listed
./" in decreasing order of precedence.
./" The evaluation depends on the number of arguments; see below.
./" Operator precedence is used when there are five or more arguments.
./" .RS
./" .PD 0
./" .TP
./" .B ! \fIexpr\fP
./" True if
./" .I expr
./" is false.
./" .TP
./" .B ( \fIexpr\fP )
./" Returns the value of \fIexpr\fP.
./" This may be used to override the normal precedence of operators.
./" .TP
./" \fIexpr1\fP \-\fBa\fP \fIexpr2\fP
./" True if both
./" .I expr1
./" and
./" .I expr2
./" are true.
./" .TP
./" \fIexpr1\fP \-\fBo\fP \fIexpr2\fP
./" True if either
./" .I expr1
./" or
./" .I expr2
./" is true.
./" .PD
./" .PP
./" \fBtest\fP and \fB[\fP evaluate conditional
./" expressions using a set of rules based on the number of arguments.
./" .if t .sp 0.5
./" .if n .sp 1
./" .PD 0
./" .TP
./" 0 arguments
./" The expression is false.
./" .TP
./" 1 argument
./" The expression is true if and only if the argument is not null.
./" .TP
./" 2 arguments
./" If the first argument is \fB!\fP, the expression is true if and
./" only if the second argument is null.
./" If the first argument is one of the unary conditional operators listed above
./" under
./" .SM
./" .BR "CONDITIONAL EXPRESSIONS" ,
./" the expression is true if the unary test is true.
./" If the first argument is not a valid unary conditional operator, the expression
./" is false.
./" .TP
./" 3 arguments
./" The following conditions are applied in the order listed.
./" If the second argument is one of the binary conditional operators listed above
./" under
./" .SM
./" .BR "CONDITIONAL EXPRESSIONS" ,
./" the result of the expression is the result of the binary test using
./" the first and third arguments as operands.
./" The \fB\-a\fP and \fB\-o\fP operators are considered binary operators
./" when there are three arguments.  
./" If the first argument is \fB!\fP, the value is the negation of
./" the two-argument test using the second and third arguments.
./" If the first argument is exactly \fB(\fP and the third argument is
./" exactly \fB)\fP, the result is the one-argument test of the second
./" argument.
./" Otherwise, the expression is false.
./" .TP
./" 4 arguments
./" If the first argument is \fB!\fP, the result is the negation of
./" the three-argument expression composed of the remaining arguments.
./" Otherwise, the expression is parsed and evaluated according to 
./" precedence using the rules listed above.
./" .TP
./" 5 or more arguments
./" The expression is parsed and evaluated according to precedence
./" using the rules listed above.
./" .if t .sp 0.5
./" .if n .sp 1
./" .LP
./" When used with \fBtest\fP or \fB[\fP, the \fB<\fP and \fB>\fP operators
./" sort lexicographically using ASCII ordering.
./" .RE
./" .PD
./" .TP
./" .B times
./" Print the accumulated user and system times for the shell and
./" for processes run from the shell.  The return status is 0.
./" .TP
./" \fBtrap\fP [\fB\-lp\fP] [[\fIarg\fP] \fIsigspec\fP ...]
./" The command
./" .I arg
./" is to be read and executed when the shell receives
./" signal(s)
./" .IR sigspec .
./" If
./" .I arg
./" is absent (and there is a single \fIsigspec\fP) or
./" .BR \- ,
./" each specified signal is
./" reset to its original disposition (the value it had
./" upon entrance to the shell).
./" If 
./" .I arg
./" is the null string the signal specified by each
./" .I sigspec
./" is ignored by the shell and by the commands it invokes.
./" If
./" .I arg
./" is not present and
./" .B \-p
./" has been supplied, then the trap commands associated with each
./" .I sigspec
./" are displayed.
./" If no arguments are supplied or if only
./" .B \-p
./" is given,
./" .B trap
./" prints the list of commands associated with each signal.
./" The
./" .B \-l
./" option causes the shell to print a list of signal names and
./" their corresponding numbers.
./" Each
./" .I sigspec
./" is either
./" a signal name defined in <\fIsignal.h\fP>, or a signal number.
./" Signal names are case insensitive and the
./" .SM
./" .B SIG
./" prefix is optional.
./" .if t .sp 0.5
./" .if n .sp 1
./" If a
./" .I sigspec
./" is
./" .SM
./" .B EXIT
./" (0) the command
./" .I arg
./" is executed on exit from the shell.
./" If a
./" .I sigspec
./" is
./" .SM
./" .BR DEBUG ,
./" the command
./" .I arg
./" is executed before every \fIsimple command\fP, \fIfor\fP command,
./" \fIcase\fP command, \fIselect\fP command, every arithmetic \fIfor\fP
./" command, and before the first command executes in a shell function (see
./" .SM
./" .B SHELL GRAMMAR
./" above).
./" Refer to the description of the \fBextdebug\fP option to the
./" \fBshopt\fP builtin for details of its effect on the \fBDEBUG\fP trap.
./" If a
./" .I sigspec
./" is
./" .SM
./" .BR RETURN ,
./" the command
./" .I arg
./" is executed each time a shell function or a script executed with
./" the \fB.\fP or \fBsource\fP builtins finishes executing.
./" .if t .sp 0.5
./" .if n .sp 1
./" If a
./" .I sigspec
./" is
./" .SM
./" .BR ERR ,
./" the command
./" .I arg
./" is executed whenever a 
./" a pipeline (which may consist of a single simple
./" command), a list, or a compound command returns a 
./" non\-zero exit status,
./" subject to the following conditions.
./" The
./" .SM
./" .B ERR
./" trap is not executed if the failed
./" command is part of the command list immediately following a
./" .B while
./" or
./" .B until
./" keyword, 
./" part of the test in an
./" .I if
./" statement, part of a command executed in a
./" .B &&
./" or
./" .B ||
./" list except the command following the final \fB&&\fP or \fB||\fP,
./" any command in a pipeline but the last,
./" or if the command's return value is
./" being inverted using
./" .BR ! .
./" These are the same conditions obeyed by the \fBerrexit\fP (\fB\-e\fP) option.
./" .if t .sp 0.5
./" .if n .sp 1
./" Signals ignored upon entry to the shell cannot be trapped or reset.
./" Trapped signals that are not being ignored are reset to their original
./" values in a subshell or subshell environment when one is created.
./" The return status is false if any
./" .I sigspec
./" is invalid; otherwise
./" .B trap
./" returns true.
./" .TP
./" \fBtype\fP [\fB\-aftpP\fP] \fIname\fP [\fIname\fP ...]
./" With no options, 
./" indicate how each
./" .I name
./" would be interpreted if used as a command name.
./" If the
./" .B \-t
./" option is used,
./" .B type
./" prints a string which is one of
./" .IR alias ,
./" .IR keyword ,
./" .IR function ,
./" .IR builtin ,
./" or
./" .I file 
./" if
./" .I name
./" is an alias, shell reserved word, function, builtin, or disk file,
./" respectively.
./" If the
./" .I name
./" is not found, then nothing is printed, and an exit status of false
./" is returned.
./" If the
./" .B \-p
./" option is used,
./" .B type
./" either returns the name of the disk file
./" that would be executed if
./" .I name
./" were specified as a command name,
./" or nothing if
./" .if t \f(CWtype -t name\fP
./" .if n ``type -t name''
./" would not return
./" .IR file .
./" The
./" .B \-P
./" option forces a
./" .SM
./" .B PATH
./" search for each \fIname\fP, even if
./" .if t \f(CWtype -t name\fP
./" .if n ``type -t name''
./" would not return
./" .IR file .
./" If a command is hashed,
./" .B \-p
./" and
./" .B \-P
./" print the hashed value, which is not necessarily the file that appears
./" first in 
./" .SM
./" .BR PATH .
./" If the
./" .B \-a
./" option is used, 
./" .B type
./" prints all of the places that contain
./" an executable named 
./" .IR name .
./" This includes aliases and functions,
./" if and only if the 
./" .B \-p
./" option is not also used.
./" The table of hashed commands is not consulted
./" when using
./" .BR \-a .
./" The
./" .B \-f
./" option suppresses shell function lookup, as with the \fBcommand\fP builtin.
./" .B type
./" returns true if all of the arguments are found, false if
./" any are not found.
./" .TP
./" \fBulimit\fP [\fB\-HSTabcdefilmnpqrstuvx\fP [\fIlimit\fP]]
./" Provides control over the resources available to the shell and to
./" processes started by it, on systems that allow such control.
./" The \fB\-H\fP and \fB\-S\fP options specify that the hard or soft limit is
./" set for the given resource.
./" A hard limit cannot be increased by a non-root user once it is set;
./" a soft limit may be increased up to the value of the hard limit.
./" If neither \fB\-H\fP nor \fB\-S\fP is specified, both the soft and hard
./" limits are set.
./" The value of
./" .I limit
./" can be a number in the unit specified for the resource
./" or one of the special values
./" .BR hard ,
./" .BR soft ,
./" or
./" .BR unlimited ,
./" which stand for the current hard limit, the current soft limit, and
./" no limit, respectively.
./" If
./" .I limit
./" is omitted, the current value of the soft limit of the resource is
./" printed, unless the \fB\-H\fP option is given.  When more than one
./" resource is specified, the limit name and unit are printed before the value.
./" Other options are interpreted as follows:
./" .RS
./" .PD 0
./" .TP
./" .B \-a
./" All current limits are reported
./" .TP
./" .B \-b
./" The maximum socket buffer size
./" .TP
./" .B \-c
./" The maximum size of core files created
./" .TP
./" .B \-d
./" The maximum size of a process's data segment
./" .TP
./" .B \-e
./" The maximum scheduling priority ("nice")
./" .TP
./" .B \-f
./" The maximum size of files written by the shell and its children
./" .TP
./" .B \-i
./" The maximum number of pending signals
./" .TP
./" .B \-l
./" The maximum size that may be locked into memory
./" .TP
./" .B \-m
./" The maximum resident set size (many systems do not honor this limit)
./" .TP
./" .B \-n
./" The maximum number of open file descriptors (most systems do not
./" allow this value to be set)
./" .TP
./" .B \-p
./" The pipe size in 512-byte blocks (this may not be set)
./" .TP
./" .B \-q
./" The maximum number of bytes in POSIX message queues
./" .TP
./" .B \-r
./" The maximum real-time scheduling priority
./" .TP
./" .B \-s
./" The maximum stack size
./" .TP
./" .B \-t
./" The maximum amount of cpu time in seconds
./" .TP
./" .B \-u
./" The maximum number of processes available to a single user
./" .TP
./" .B \-v
./" The maximum amount of virtual memory available to the shell and, on
./" some systems, to its children
./" .TP
./" .B \-x
./" The maximum number of file locks
./" .TP
./" .B \-T
./" The maximum number of threads
./" .PD
./" .PP
./" If
./" .I limit
./" is given, and the
./" .B \-a
./" option is not used,
./" \fIlimit\fP is the new value of the specified resource.
./" If no option is given, then
./" .B \-f
./" is assumed.  Values are in 1024-byte increments, except for
./" .BR \-t ,
./" which is in seconds;
./" .BR \-p ,
./" which is in units of 512-byte blocks;
./" and
./" .BR \-T ,
./" .BR \-b ,
./" .BR \-n ,
./" and
./" .BR \-u ,
./" which are unscaled values.
./" The return status is 0 unless an invalid option or argument is supplied,
./" or an error occurs while setting a new limit.
./" .RE
./" .TP
./" \fBumask\fP [\fB\-p\fP] [\fB\-S\fP] [\fImode\fP]
./" The user file-creation mask is set to 
./" .IR mode .
./" If
./" .I mode
./" begins with a digit, it
./" is interpreted as an octal number; otherwise
./" it is interpreted as a symbolic mode mask similar
./" to that accepted by
./" .IR chmod (1).
./" If
./" .I mode
./" is omitted, the current value of the mask is printed.
./" The
./" .B \-S
./" option causes the mask to be printed in symbolic form; the
./" default output is an octal number.
./" If the
./" .B \-p
./" option is supplied, and
./" .I mode
./" is omitted, the output is in a form that may be reused as input.
./" The return status is 0 if the mode was successfully changed or if
./" no \fImode\fP argument was supplied, and false otherwise.
./" .TP
./" \fBunalias\fP [\-\fBa\fP] [\fIname\fP ...]
./" Remove each \fIname\fP from the list of defined aliases.  If
./" .B \-a
./" is supplied, all alias definitions are removed.  The return
./" value is true unless a supplied
./" .I name
./" is not a defined alias.
./" .TP
./" \fBunset\fP [\-\fBfv\fP] [\-\fBn\fP] [\fIname\fP ...]
./" For each
./" .IR name ,
./" remove the corresponding variable or function.
./" If the
./" .B \-v
./" option is given, each
./" .I name
./" refers to a shell variable, and that variable is removed.
./" Read-only variables may not be unset.
./" If
./" .B \-f
./" is specified, each
./" .I name
./" refers to a shell function, and the function definition
./" is removed.
./" If the
./" .B \-n
./" option is supplied, and \fIname\fP is a variable with the \fInameref\fP
./" attribute, \fIname\fP will be unset rather than the variable it
./" references.
./" \fB\-n\fP has no effect if the \fB\-f\fP option is supplied.
./" If no options are supplied, each \fIname\fP refers to a variable; if
./" there is no variable by that name, any function with that name is
./" unset.
./" Each unset variable or function is removed from the environment
./" passed to subsequent commands.
./" If any of
./" .SM
./" .BR COMP_WORDBREAKS ,
./" .SM
./" .BR RANDOM ,
./" .SM
./" .BR SECONDS ,
./" .SM
./" .BR LINENO ,
./" .SM
./" .BR HISTCMD ,
./" .SM
./" .BR FUNCNAME ,
./" .SM
./" .BR GROUPS ,
./" or
./" .SM
./" .B DIRSTACK
./" are unset, they lose their special properties, even if they are
./" subsequently reset.  The exit status is true unless a
./" .I name
./" is readonly.
./" .TP
./" \fBwait\fP [\fB\-n\fP] [\fIn ...\fP]
./" Wait for each specified child process and return its termination status.
./" Each
./" .I n
./" may be a process
./" ID or a job specification; if a job spec is given, all processes
./" in that job's pipeline are waited for.  If
./" .I n
./" is not given, all currently active child processes
./" are waited for, and the return status is zero.
./" If the \fB\-n\fP option is supplied, \fBwait\fP waits for any job to
./" terminate and returns its exit status.
./" If
./" .I n
./" specifies a non-existent process or job, the return status is
./" 127.  Otherwise, the return status is the exit status of the last
./" process or job waited for.
.\" bash_builtins
.if \n(zZ=1 .ig zZ
./" 
.SH EXAMPLE
.BR "setenv " "ghost shell"
.TP
.BR "unsetenv " "ghost"

.SH SEE ALSO
.TP
\fIsh\fP(1), \fIksh\fP(1), \fIcsh\fP(1)
.TP
\fIemacs\fP(1), \fIvi\fP(1)
.TP
\fIreadline\fP(3)
.PD
.SH AUTHORS
.SS "Julija Lee"
.UR https://github.com/freejules
Github
.UE

.UR https://twitter.com/leejulija
Twitter
.UE

.SS "Elaine Yeung"
.UR https://github.com/yeungegs
Github
.UE

.UR https://twitter.com/egsy
Twitter
.UE

.SS Authors of \fIbash\fP(1) man page
Brian Fox, Free Software Foundation
.br
bfox@gnu.org
.PP
Chet Ramey, Case Western Reserve University
.br
chet.ramey@case.edu
